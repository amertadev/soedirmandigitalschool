---
import { cn } from "@lib/utils"
import { LINKS } from "@const"
const { pathname } = Astro.url
---

<div class="buttons absolute right-0 top-1/2 -translate-y-1/2 flex gap-1 font-semibold text-hitam">
  <nav class="hidden lg:flex items-center justify-center gap-1">
    {LINKS.map((LINK) => (
      <a
        href={LINK.HREF}
        class={cn(
          "h-8 rounded-full px-3",
          "flex items-center justify-center opacity-80",
          "hover:underline-animate hover:opacity-100 transition-all duration-300",
          pathname === LINK.HREF && "underline-active"
        )}
      >
        {LINK.TEXT}
      </a>
    ))}
  </nav>
  <button id="modal-signin" aria-label="Modal open and closed" class="btn whitespace-nowrap !hidden md:!flex opacity-80 hover:opacity-100 transition-opacity duration-500">
    <div class="btn__content">
      <span class="-mt-1">Sign In to Bootcamp</span>
      <svg class="btn__arrow h-5" width="25" height="15" fill="currentColor">
        <use href="/ui.svg#arrow"></use>
      </svg>
    </div>
  </button>
  <button type="button" aria-label="Question Jar" class="btn ml-4 question-jar-btn !hidden md:!flex opacity-80 hover:opacity-100 transition-opacity duration-500">
    <div class="btn__content size-14">
      <img src="/q-mark.webp" alt="Question Jar" class="w-[14px] h-auto ml-[3px] question-jar-icon" />
    </div>
  </button>
  <button
    id="header-drawer-button"
    aria-label="Toggle drawer open and closed"
    class={cn(
      "flex md:hidden",
      "size-9 rounded-full p-2 items-center justify-center",
      "bg-transparent hover:bg-hitam/5",
      "stroke-current hover:stroke-hitam",
      "border border-hitam/10",
      "transition-colors duration-300"
    )}
  >
    <svg id="drawer-open" class="size-full">
      <use href="/ui.svg#menu"></use>
    </svg>
    <svg id="drawer-close" class="size-full">
      <use href="/ui.svg#x"></use>
    </svg>
  </button>
</div>

<style>
  #header-drawer-button {
    #drawer-open { @apply block; }
    #drawer-close { @apply hidden; }
    
    &.open {
      #drawer-open { @apply hidden; }
      #drawer-close { @apply block; }
    }
  }
</style>

<script>
  function toggleDrawer() {
    document.getElementById("drawer")?.classList.toggle("open")
    document.getElementById("header-drawer-button")?.classList.toggle("open")
  }

  function initializeDrawerButton() {
    document.getElementById("header-drawer-button")?.addEventListener("click", toggleDrawer)
  }

  document.addEventListener("astro:after-swap", initializeDrawerButton)
  initializeDrawerButton()
</script>